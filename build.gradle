buildscript {
    ext {
        kotlinVersion = '1.2.21'
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'io.spring.dependency-management'

group 'space.hookszhang'
version '0.0.20-dev'
description 'Duiker core library.'
compileJava { options.encoding = "UTF-8" }

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'https://jitpack.io' }
}

ext {
    springfox_version = '2.7.0'
    springCloudVersion = 'Finchley.M9'
    feignCoreVersion = '9.5.1'
    mysqlVersion = '5.1.44'
    mybatisplusVersion = '2.1.4'
    mybatisplusStarterVersion = '1.0.5'
    liquibaseCoreVersion = '3.5.3'
    servletApiVersion = '4.0.0'
    hutoolVersion = '3.2.2'
    lombokVersion = '1.16.18'
    jodaTimeVersion = '2.9.9'
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server")
    compile("io.github.openfeign:feign-core:${feignCoreVersion}")
    compile("mysql:mysql-connector-java:${mysqlVersion}")
    compile("com.baomidou:mybatisplus-spring-boot-starter:${mybatisplusStarterVersion}")
    compile("com.baomidou:mybatis-plus:${mybatisplusVersion}")
    compile("org.liquibase:liquibase-core:${liquibaseCoreVersion}")
    compile("io.springfox:springfox-swagger2:${springfox_version}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("javax.servlet:javax.servlet-api:${servletApiVersion}")
    compile("com.xiaoleilu:hutool-all:${hutoolVersion}")
    compile("org.projectlombok:lombok:${lombokVersion}")
    compile 'joda-time:joda-time:2.9.9'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// build source jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
